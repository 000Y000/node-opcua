{"name":"Node-opcua","tagline":"an implementation of a OPC UA stack fully written in javascript and nodejs","body":"node-opcua\r\n==========\r\n\r\nan implementation of a OPC UA stack fully written in javascript and nodejs\r\n\r\n\r\n[![NPM version](https://badge.fury.io/js/node-opcua.png)](http://badge.fury.io/js/node-opcua)\r\n[![Build Status](https://travis-ci.org/erossignon/node-opcua.png?branch=master)](https://travis-ci.org/erossignon/node-opcua)\r\n[![Dependency Status](https://gemnasium.com/erossignon/node-opcua.png)](https://gemnasium.com/erossignon/node-opcua)\r\n[![Coverage Status](https://coveralls.io/repos/erossignon/node-opcua/badge.png)](https://coveralls.io/r/erossignon/node-opcua)\r\n[![Code Climate](https://codeclimate.com/github/erossignon/node-opcua.png)](https://codeclimate.com/github/erossignon/node-opcua)\r\n\r\n[![OPC UA](http://b.repl.ca/v1/OPC-UA-blue.png)](http://opcfoundation.org/)\r\n\r\n\r\n\r\nnode-opcua is an experimental OPC-UA stack written in NodeJS.\r\n\r\nWhy NodeJS ?\r\n\r\nBecause nodeJs is a great framework to design asynchronous application.\r\n\r\n\r\nGetting started\r\n================\r\n\r\ninstalling node-opcua\r\n---------------------\r\n\r\n    $ npm install node-opcua\r\n\r\nfirst example\r\n---------------------\r\n\r\ninstall pre-requisite:\r\n\r\n\r\n    $ npm install async node-opcua\r\n\r\ncreate a file `myfirstclient.js` and add the following code :\r\n\r\n```javascript\r\nvar opcua = require(\"node-opcua\");\r\nvar async = require(\"async\");\r\n\r\nvar client = new opcua.OPCUAClient();\r\n\r\nvar endpointUrl = \"opc.tcp://\" + require(\"os\").hostname() + \":4841\";\r\n\r\nvar the_session = null;\r\nasync.series([\r\n\r\n\r\n    // step 1 : connect to\r\n    function(callback)  {\r\n      client.connect(endpointUrl,function (err) {\r\n         if(err) {\r\n           console.log(\" cannot connect to endpoint :\" , endpointUrl );\r\n         } else {\r\n          console.log(\"connected !\");\r\n         }\r\n         callback(err);\r\n      });\r\n   },\r\n\r\n\r\n   // step 2 : createSession\r\n   function(callback) {\r\n     client.createSession( function(err,session) {\r\n         if(!err) {\r\n           the_session = session;\r\n         }\r\n         callback(err);\r\n     });\r\n\r\n   },\r\n\r\n\r\n   // step 3 : browse\r\n   function(callback) {\r\n\r\n     the_session.browse(\"RootFolder\", function(err,browse_result,diagnostics){\r\n        if(!err) {\r\n          browse_result[0].references.forEach(function(reference) {\r\n            console.log( reference.browseName);\r\n          });\r\n        }\r\n        callback(err);\r\n     });\r\n   },\r\n\r\n\r\n   // step 4 : read a variable\r\n   function(callback) {\r\n     the_session.read(\"ns=2;s=Furnace_1.Temperature\", function(err,dataValues,diagnostics) {\r\n       if (!err) {\r\n         console.log(\" temperature = \" , dataValues[0].value.value);\r\n       }\r\n       callback(err);\r\n     })\r\n   },\r\n\r\n\r\n], function(err) {\r\n  if (err) {\r\n    console.log(\" failure \",err);\r\n  } else {\r\n    console.log(\"done!\")\r\n  }\r\n  // disconnect regardless\r\n  client.disconnect(function(){});\r\n}) ;\r\n\r\n```\r\n\r\n\r\nnow run it\r\n\r\n    $ node myfirstclient.js\r\n\r\n\r\n\r\n\r\nContributing\r\n================\r\n\r\n\r\n    $ git clone git://github.com/erossignon/node-opcua.git node-opcua\r\n    $ cd node-opcua\r\n    $ npm install\r\n    $ npm test\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n[![Flattr this git repo](http://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=gadz_er&url=https://github.com/erossignon/node-opcua&title=Node-OPCUA&language=nodejs&tags=github&category=software)\r\n\r\n[![NPM](https://nodei.co/npm/node-opcua.png?downloads=true&stars=true)](https://nodei.co/npm/node-opcua/)\r\n\r\n[![Project Stats](https://www.ohloh.net/p/713850/widgets/project_thin_badge.gif)](https://www.ohloh.net/p/node-opcua)\r\n\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/erossignon/node-opcua/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n\r\n","google":"UA-25438821-3","note":"Don't delete this file! It's used internally to help with page regeneration."}